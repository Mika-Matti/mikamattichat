//T√§√§ll√§ tehd√§√§n kaikki t√§rkee chat kommunikointi serverin kanssa
 
//let socket = io.connect();
let socket = io({transports: ['websocket'], 
                upgrade: false, });

$(function ()
{
       
  
    //NIMIMERKIN ASETTAMINEN
    $('#change').submit(function(e)
    {
        e.preventDefault();
        var hasSpace = $('#n').val().indexOf(' ')>-1; 
        var hasSpace2 = $('#n').val().indexOf('‚ÄÉ')>-1; //erilainen space
        if($('#n').val().length > 0 && $('#n').val().length < 14 && !hasSpace && !hasSpace2)
        {
            socket.emit('change user', $('#n').val(), function(data)
            {
                if(data) //jos callback eli data === true, nimen voi vaihtaa.
                {
                    $('.chatHeaderpre').hide();     //Tervetuloa otsikko sulkeutuu
                    $('.chatHeader').show();        //Ja uusi otsikko tulee tilalle                     
                }
                else
                {
                    alert("That nickname is invalid or already taken!");
                }                 
            });
        }
        else if(hasSpace || hasSpace2)
        {
            alert("Don't use spaces in your nickname.");
        }
        else //jos nimimerkki on alle 1 kirjainta tai yli 13 kirjainta pitk√§
        {
            alert("Type your nickname (max. 13 letters)");
        }

        $('#n').val(''); //tyhjent√§√§ kent√§n      
    });
     
    //Kirjoita t√§h√§n kuinka k√§ytt√§j√§nimi ilmestyy huonelistalle
    socket.on('get users', function(data)
    {
        var html = '';
        for(i = 0; i < data.length; i++)
        {
            html += '<li class="usernames"><b>' + data[i] + '</b></li>';
        }
        $("#usernames").html(html);         
    });    
    //HUONELISTALOPPUU
    //kokeillaan lis√§t√§ vain oma nimi ylh√§√§lle
    socket.on('get user', function(data)
    {
        var html = '';
        html += 'Your current nickname is "' + data.user + '"';
        $("#nickname").html(html); 
    });
    //NIMENVAIHTO LOPPUU 
    //T√ÑH√ÑN TULEE CONNECTIONS M√Ñ√ÑR√Ñ JOKA MENEE 
    socket.on('get connections', function(data)
    {
        var html = '';
        html += "(" + data + ")";
        $("#connections").html(html);
    });
    //CONNECTIONS LOPPUU       


    //CHATVIESTINL√ÑHETT√ÑMINEN
    $('#send').submit(function(e)
    {
        e.preventDefault();

        if($('#m').val().length > 0)//katsotaan onko viesti tyhj√§ ehdolla
        {

            //server.js puolella sitten otetaan koppi t√§st√§
            socket.emit('chat message', $('#m').val(), function(data)
            {
                alert("Error: " + data); // ottaa serverilt√§ callback viestit jos whisper on tyhj√§ tai k√§ytt√§j√§√§ ei ole
            });
            $('#m').val(''); //tyhjent√§√§ kent√§n            
        }
        else
        {
            //alert("Write a message.");            
        }
    });

    //vanhojen viestin lataaminen
    socket.on('load old msgs', function(docs) 
    {
        for(i = docs.length-1; i >= 0; i--)  //tuodaan reversen√§ jotta viimeisin
        {
            sendOldMessages(docs[i]);
        }        
        //K√§skee ohjelman scrollata n√§ytt√∂ alas uuden viestin tullessa
        $(".chatMessages").stop().animate({ scrollTop: $(".chatMessages")[0].scrollHeight}, 0);
    });        
   
    function sendOldMessages(data)
    {
       $("#messages").append("<li>" + data.timestamp + data.user + data.msg + "<b style=\"color:red; font-size: 10px;\"> [" + data.oldmessagetime +"]</b></li>");
    }

    //viesti tulee clientside ikkunaan
    socket.on('new message', function(data)
    {
        //viestin l√§hetys
        $("#messages").append("<li>" + data.timestamp + data.user + data.msg + "</li>");
        scrollDown();
    });

    //yksityisviesti. T√§t√§ ei tallenneta tietokantaan.
    socket.on('whisper', function(data)
    {
        //viestin l√§hetys
        $("#messages").append("<li>" + getCurrentDate() + " <i style=\"color:purple;\">" + "<b style=\"color:purple;\">" + data.user + " whispers</b>" + ": " + data.msg + "</i></li>");
        scrollDown();
    });

    //purge messages
    socket.on('purge', function(data)
    {   
        $("#messages").load(window.location.href + " #messages" );   //p√§ivitet√§√§n viestidiv, jotta se tyhjenee kaikille.   
        
        setTimeout(function(){ $("#messages").append("<li>" + data.timestamp + data.user + data.msg + "</li>"); }, 200); //l√§hetet√§√§n ilmoitus, ett√§ kuka poisti viestit.
                
    });

});

function scrollDown()
{
    //alla laitetaan scrollbar alas, jotta uusin viesti olisi aina n√§kyviss√§ alhaalla aina viestin tullessa
    var s = $(".chatMessages").scrollTop(),
        d = $(document.documentElement).height(),
        c = $(".chatMessages").height();
        var scrollPercent = (s / (d - c)) * 100;
        if ( scrollPercent >= 90 )
        {    
            $(".chatMessages").stop().animate({ scrollTop: $(".chatMessages")[0].scrollHeight}, 0);
        }         
}

// TIMESTAMP clientsidess√§
function getCurrentDate() 
{
    //whisperviestit soveltavat clientinpuolella tehty√§ timestamppia, sill√§ niit√§ ei tallenneta databaseen t√§ll√§ hetkell√§ ainakaan.
    var currentDate = new Date();
    var hour = (currentDate.getHours() < 10 ? '0' : '') + currentDate.getHours();
    var minute = (currentDate.getMinutes() < 10 ? '0' : '') + currentDate.getMinutes();
    return hour + ":" + minute;          
}
//lista t√§m√§n hetken komennoista
function help() 
{
    alert("mikamattiChat -- The more I add features the more I add helpful tips here.\n"
    + "\nSetting your nickname:"
    + "\nYour nickname has to be 1-13 characters long."
    + "\nDon't use spaces or special characters in your nickname. Alphabets, numbers and some characters such as & - _ . and such are allowed.\n"
    + "\nList of current /commands:"
    + "\n/w username message -- You can send a private message to anyone in the room by typing /w then their username and then your message."
    + "\n/me -- Express yourself in third person, for example - '/me is feeling content today.'\n"
    + "\nList of admin /commands:"
    + "\n/imitate -- Send a message as any user as you want, even imaginary. The only purpose this serves is being silly."
    + "\n/purge -- This will remove all messages from the client and database. Use with caution."
    + "\n/setadmin username -- Make another user admin."
    + "\n/removeadmin username -- Make another admin user again.\n"
    + "\nHave fun.");
}
//l√§het√§ kuva chattiin
function emojiButton()
{
    //alert("Feature unavailable.");
    var pop = document.getElementById("emojibox");
    if (pop.style.display === "block") {
      pop.style.display = "none";
    } else {
      pop.style.display = "block";
    }
}

//unicode emojien k√§ytt√§minen chatissa
//var emojis = ["&#x1F603;"];
var emojis = ["üòÅ","üòÇ","üòÉ","üòÑ","üòÖ","üòÜ","üòâ","üòä","üòã","üòå","üòç","üòè","üòí","üòì","üòî","üòñ","üòò","üòö","üòú","üòù","üòû","üò†","üò°","üò¢","üò£","üò§","üò•","üò®","üò©","üò™","üò´",
              "üò≠","üò∞","üò±","üò≤","üò≥","üòµ","üò∑","üòá","üòé","üòê","üò∂","‚ô•",              

              "üò∏","üòπ","üò∫","üòª","üòº","üòΩ","üòæ","üòø","üôÄ","üôÖ","üôÜ","üôá","üôà","üôâ","üôä","üôã","üôå","üôç","üôé","üôè","üë§","üë¶","üëß","üë®","üë™","üë´","üëÆ","üëØ","üë∞","üë±","üë≤",
              "üë≥","üë¥","üëµ","üë∂","üë∑","üë∏","üíÇ","üéÖ","üëº","üíÅ","üíÜ","üíá","üíÉ","üíÇ",
              
              "üëæ","üëπ","üë∫","üíÄ","üëª","üëΩ","üòà","üëø",
              
              "üëÄ","üëÇ","üëÉ","üëÑ","üëÖ","üíã",
              
              "üëÜ","üëá","üëà","üëâ","üëä","üëã","üëå","üëç","üëé","üëè","üëê", 
              
              "üíÑ","üíÖ","üíà","üíâ","üíä",

              "üéì","üé©","üëë","üëí","üëì","üëî","üëï","üëñ","üëó","üëò",
              "üëô","üëö","üëõ","üëú","üëù","üëû","üëü","üë†","üë°","üë¢","üë£", 

              "üêå","üêç","üêé","üêë","üêí","üêî","üêó","üêò","üêô","üêö","üêõ","üêú","üêù","üêû","üêü","üê†","üê°","üê¢","üê£","üê§","üê•","üê¶","üêß","üê®","üê©","üê´","üê¨","üê≠","üêÆ","üêØ","üê∞",
              "üê±","üê≤","üê≥","üê¥","üêµ","üê∂","üê∑","üê∏","üêπ","üê∫","üêª","üêº","üêΩ","üêæ",              
              
              "üçÖ","üçÜ","üçá","üçà","üçâ","üçä","üçå","üçç","üçé","üçè","üçë","üçí","üçì",
              "üçî","üçï","üçñ","üçó","üçò","üçô","üçö","üçõ","üçú","üçù","üçû","üçü","üç†","üç°","üç¢","üç£","üç§","üç•","üç¶","üçß","üç®","üç©","üç™","üç´","üç¨","üç≠","üçÆ","üçØ","üç∞","üç±","üç≤",
              "üç≥","üç¥","üçµ","üç∂","üç∑","üç∏","üçπ","üç∫","üçª","üéÄ","üéÅ","üéÇ","üéÉ","üéÑ","üå∞","üå±","üå¥","üåµ","üå∑","üå∏","üåπ","üå∫","üåª","üåº","üåΩ","üåæ","üåø","üçÄ","üçÅ","üçÇ","üçÉ","üçÑ",

              "üéµ","üé∂","üé∑","üé∏","üéπ","üé∫","üéª","üéº","üéø","üèÄ","üèÅ","üèÇ","üèÉ","üèÑ","üèÜ","üèà","üèä",
              
              "üè†","üè°","üè¢","üè£","üè•","üè¶","üèß","üè®","üè©","üè™","üè´","üè¨","üè≠",
            
              "‚ôø"];

document.addEventListener("DOMContentLoaded", function()
{
   

    function addEmojisToBox ()
    {
        var emojiBox = $('#emojibox');
        for ( let i = 0; i < emojis.length; ++i )
        {
            emojiBox.append ( "<input class='emoticon' type='button' value='" + emojis [ i ] + "' onclick='addEmoji("+i+")' />" );
        }
    }

    addEmojisToBox ();
});

function addEmoji ( index )
{
    // lis√§√§ viestiinputtiin emoji [ index ]
    $('#m').val($('#m').val() + emojis [index]);

}


 
